# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

name: vpconsumer-js

image:
  namespace: vpconsumer-js
  tag: latest
  

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "vpconsumer-js-service"

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 500m
  #   memory: 1Gi
  # requests:
  #   cpu: 250m
  #   memory: 1Gi
    
replicaCount: 1 # if autoscaling.pattern: none, this will be selected

containers:
  ports:
    - name: http
      containerPort: 8080
      protocol: TCP
  healthEndpoints:
    enabled: true
    livenessProbe:
      httpGet:
        path: /vehicle/positions
        port: 8080
    readinessProbe:
      httpGet:
        path: /vehicle/positions
        port: 8080
  env:
  envFrom:

data: 
  production.json: |
    {
      "kafka": {
        "KafkaConfig": {
          "clientId": "sample-js-app",
          "brokers": [
            "${BOOTSTRAP_SERVERS}"
          ]
        },
        "ConsumerConfig": {
          "groupId": "sample-js-consumer"
        },
        "ProducerConfig": {      
          "maxInFlightRequests": 1,
          "idempotent": true,
          "transactionalId": "sample-js-producer"    
        }
      },
      "redis": {
        "RedisClientOptions": {
          "url": "redis://${REDIS}:6379",
          "database": 3
        }
      }
    }


service:
  type: LoadBalancer        # Assigned LoadBalancer if ingress.pattern=loadbalancer
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: http    


volumeMounts:
- name: config-volume
  mountPath: /app/config

volumes:
- name: config-volume
  configMap:
    # Provide the name of the ConfigMap containing the files you want
    # to add to the container
    name: vpconsumer-js